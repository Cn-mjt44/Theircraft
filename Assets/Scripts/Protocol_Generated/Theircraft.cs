//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from: protocol/theircraft.proto
namespace protocol.theircraft
{
  [global::System.Serializable, global::ProtoBuf.ProtoContract(Name=@"TestReq")]
  public partial class TestReq : global::ProtoBuf.IExtensible
  {
    public TestReq() {}
    
    private string _msg;
    [global::ProtoBuf.ProtoMember(1, IsRequired = true, Name=@"msg", DataFormat = global::ProtoBuf.DataFormat.Default)]
    public string msg
    {
      get { return _msg; }
      set { _msg = value; }
    }
    private global::ProtoBuf.IExtension extensionObject;
    global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
      { return global::ProtoBuf.Extensible.GetExtensionObject(ref extensionObject, createIfMissing); }
  }
  
  [global::System.Serializable, global::ProtoBuf.ProtoContract(Name=@"TestRes")]
  public partial class TestRes : global::ProtoBuf.IExtensible
  {
    public TestRes() {}
    
    private int _RetCode;
    [global::ProtoBuf.ProtoMember(1, IsRequired = true, Name=@"RetCode", DataFormat = global::ProtoBuf.DataFormat.TwosComplement)]
    public int RetCode
    {
      get { return _RetCode; }
      set { _RetCode = value; }
    }
    private string _msg;
    [global::ProtoBuf.ProtoMember(2, IsRequired = true, Name=@"msg", DataFormat = global::ProtoBuf.DataFormat.Default)]
    public string msg
    {
      get { return _msg; }
      set { _msg = value; }
    }
    private global::ProtoBuf.IExtension extensionObject;
    global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
      { return global::ProtoBuf.Extensible.GetExtensionObject(ref extensionObject, createIfMissing); }
  }
  
}